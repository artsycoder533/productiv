(()=>{"use strict";var e={917:(e,t,n)=>{e.exports=n.p+"6d4b16957e06b7a61672.png"}},t={};function n(o){var i=t[o];if(void 0!==i)return i.exports;var d=t[o]={exports:{}};return e[o](d,d.exports,n),d.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{function e(){const e=new Date;return`${e.getFullYear()}-${e.getMonth()+1}-${e.getDate()}`}function t(){const e=document.querySelector(".modal"),t=document.querySelector(".modal__form");e.classList.toggle("showModal"),t.reset()}function o(e,t){const n=document.createElement(e);return n.classList.add(t),n}function i(e,t,n){const o=document.createElement(e);return o.classList.add(t),o.textContent=n,o}function d(e,t,n,o){const i=document.createElement(e);return i.className=t,i.setAttribute(n,o),i}function r(e,t,n,r,l,u){const m=o("div","todo__container");m.setAttribute("data-id",u);const p=o("article","todo"),h=o("div","todo__date"),g=i("small","date",n);h.appendChild(g),p.appendChild(h);const y=o("div","todo__content"),v=i("div","todo__title",e),E=o("div","todo__priority"),f=i("small","priority",r);"high"===r?f.classList.add("high"):f.classList.add("normal"),E.appendChild(f),y.appendChild(v),y.appendChild(E);const _=o("div","todo__buttons"),C=d("button","todo__more","id","more"),I=o("i","fas");I.classList.add("fa-caret-down"),I.addEventListener("click",c),C.appendChild(I),_.appendChild(C);const b=d("button","todo__edit","id","edit"),L=o("i","fas");L.classList.add("fa-edit"),L.addEventListener("click",s),b.appendChild(L),_.appendChild(b);const x=d("button","todo__delete","id","delete"),S=o("i","fas");S.classList.add("fa-trash-alt"),S.addEventListener("click",a),x.appendChild(S),_.appendChild(x),y.append(_),p.appendChild(y);const k=i("div","todo__project",l);p.appendChild(k),m.appendChild(p);const B=o("div","todo__details"),q=o("p","description");return q.textContent=t,B.appendChild(q),m.appendChild(B),m}function c(e){e.currentTarget.parentElement.parentElement.parentElement.parentElement.nextElementSibling.classList.toggle("showDetails")}function a(e){const t=document.querySelector(".todos"),n=e.currentTarget.parentElement.parentElement.parentElement.parentElement.parentElement;var o;t.removeChild(n),o=n.dataset.id,f.forEach(((e,t)=>{e.getId()===Number(o)&&f.splice(t,1)}))}function s(e){const n=document.getElementById("form");document.querySelector(".form__heading").textContent="Edit Task";const o=function(e){const t=[];return f.forEach((n=>{n.getId()===Number(e)&&t.push(n)})),t[0]}(e.currentTarget.parentElement.parentElement.parentElement.parentElement.parentElement.dataset.id);document.querySelector(".modal"),t(),n.elements.namedItem("title").value=o.getTitle(),n.elements.namedItem("description").value=o.getDescription(),n.elements.namedItem("priority").value=o.getPriority(),n.elements.namedItem("project").value=o.getProject(),n.elements.namedItem("date").value=o.getDueDate(),document.getElementById("create").classList.add("hide");const i=document.getElementById("update");i.classList.remove("hide"),i.addEventListener("click",(()=>{const e=document.querySelector(".project__title");if(n.elements.namedItem("project").value===e.textContent)return function(e){const t=document.getElementById("form"),n=t.elements.namedItem("title").value,o=t.elements.namedItem("description").value,i=t.elements.namedItem("priority").value,d=t.elements.namedItem("project").value,r=t.elements.namedItem("date").value;document.querySelector(".todo__title").textContent=n,document.querySelector(".priority").textContent=i,"normal"===i?(document.querySelector(".priority").classList.remove("high"),document.querySelector(".priority").classList.add("normal")):"high"===i&&(document.querySelector(".priority").classList.remove("normal"),document.querySelector(".priority").classList.add("high")),document.querySelector(".todo__date").textContent=r,document.querySelector(".description").textContent=o,document.querySelector(".todo__project").textContent=d,x(n,o,r,i,d,e.getId())}(o),void t();const i=e.textContent,d=document.getElementById("miscellaneous"),r=document.getElementById("home"),c=document.getElementById("work"),a=n.elements.namedItem("title").value,s=n.elements.namedItem("description").value,l=n.elements.namedItem("priority").value,u=n.elements.namedItem("project").value,m=n.elements.namedItem("date").value;"work"===i&&(x(a,s,m,l,u,o.getId()),t(),c.click()),"home"===i&&(x(a,s,m,l,u,o.getId()),t(),r.click()),"miscellaneous"===i&&(x(a,s,m,l,u,o.getId()),t(),d.click())}))}o("section","todos");const l=document.querySelector(".container");function u(){[...l.children].forEach((e=>{e.remove()}))}const m=document.querySelector(".container");function p(e){[...m.children].forEach((e=>{e.remove()}));const t=o("h2","task__title");t.textContent="today"===e?"Due Today":e;const n=document.querySelector(".container"),i=o("section","todos");n.appendChild(t),n.appendChild(i)}function h(e){e.map((e=>{const{title:t,description:n,dueDate:o,priority:i,project:d,id:c}=e,a=document.querySelector(".todos");a.appendChild(r(t,n,o,i,d,c)),m.appendChild(a)}))}let g=0;function y(e){v();const t=document.querySelector(".container"),n=i("h2","inbox__title","Inbox");if(0===e.length){const e=document.createTextElementWithClass("p","inbox__status","Your inbox is empty");t.appendChild(n),t.appendChild(e)}else e.map((d=>{const r=o("div","inbox"),c=o("p","inbox__subject");c.textContent="You have a task that's due today";const a=function(e,t,n,o){const i=document.createElement("input");return i.setAttribute("type","checkbox"),i.setAttribute("name","checkbox"),i.setAttribute("id","checkbox"),i}();return r.addEventListener("click",(function(){!function(e,t,n){console.log(t),v();const d=document.querySelector(".container"),r=o("div","message__container"),c=i("h3","message__subject",t),a=i("p","message__title",e.title),s=i("p","message__priority",e.priority),l=i("p","message__date",e.dueDate),u=i("p","message__description",e.description),m=i("button","inbox__button","Back To Inbox");m.classList.add("button"),m.addEventListener("click",(function(){y(n)})),r.appendChild(c),r.appendChild(a),r.appendChild(s),r.appendChild(l),r.appendChild(u),r.appendChild(m),d.appendChild(r),E("subtract")}(d,c.textContent,e)})),r.appendChild(a),r.appendChild(c),t.appendChild(n),t.appendChild(r),t}));return t}function v(){[...document.querySelector(".container").children].forEach((e=>{e.remove()}))}function E(e){const t=document.getElementById("number"),n=document.getElementById("count");"add"===e?(g++,n.textContent=g,t.classList.add("number")):"subtract"===e&&(g--,g<1?(n.textContent="",t.classList.remove("number")):n.textContent=g)}const f=[],_=[];class C{constructor(e,t,n,o,i,d){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.project=i,this.id=d}getTitle(){return this.title}setTitle(e){this.title=e}getDescription(){return this.description}setDescription(e){this.description=e}getDueDate(){return this.dueDate}setDueDate(e){this.dueDate=e}getPriority(){return this.priority}setPriority(e){this.priority=e}getId(){return this.id}getProject(){return this.project}setProject(e){this.project=e}setId(e){this.id=e}}function I(e){const t=f.filter((t=>{for(const n in t)if(t[n]===e.currentTarget.id)return t}));!function(e){u();const t=o("h2","project__title");t.textContent=e;const n=document.querySelector(".container"),i=o("section","todos");n.appendChild(t),n.appendChild(i)}(e.currentTarget.id),t.map((e=>{const t=document.querySelector(".todos");t.appendChild(r(e.title,e.description,e.dueDate,e.priority,e.project,e.id)),l.appendChild(t)}))}function b(t){let n=[];"today"===t.currentTarget.id?n=f.filter((t=>t.dueDate===e())):"overdue"===t.currentTarget.id?n=f.filter((t=>t.dueDate<e())):"upcoming"===t.currentTarget.id&&(n=f.filter((t=>t.dueDate>e()))),p(t.currentTarget.id),h(n)}function L(e){p(e.currentTarget.id),h(f)}function x(e,t,n,o,i,d){f.forEach((r=>{r.getId()===Number(d)&&(r.setTitle(e),r.setDescription(t),r.setDueDate(n),r.setPriority(o),r.setProject(i))}))}function S(){y(_)}const k=[...document.querySelectorAll(".sidebar__link")],B=document.getElementById("work"),q=document.getElementById("home"),T=document.getElementById("miscellaneous");var D=n(917);function j(){document.querySelector(".sidebar").classList.toggle("hide")}function w(){document.querySelector(".header__upload").classList.toggle("visible")}function A(){const e=document.getElementById("profile"),t=document.querySelector(".header__image");if(this.files){const t=new FileReader;t.readAsDataURL(this.files[0]),t.addEventListener("load",(()=>{e.src=t.result}))}t.click()}window.addEventListener("DOMContentLoaded",(()=>{(function(){const e=document.getElementById("all"),t=document.getElementById("today"),n=document.getElementById("upcoming"),o=document.getElementById("overdue");e.addEventListener("click",L),t.addEventListener("click",b),n.addEventListener("click",b),o.addEventListener("click",b),B.addEventListener("click",I),q.addEventListener("click",I),T.addEventListener("click",I),document.getElementById("inbox").addEventListener("click",S),k.map((e=>{e.addEventListener("click",(e=>{!function(e){document.querySelector(".header__display").textContent=e.currentTarget.dataset.id,k.map((e=>{e.classList.remove("active")})),[...document.querySelectorAll(".sidebar__sublinks")].map((e=>{e.classList.contains("showSub")||e.classList.remove("showSub")})),e.currentTarget.nextElementSibling?(e.currentTarget.classList.toggle("active"),e.currentTarget.nextElementSibling.classList.toggle("showSub")):e.currentTarget.classList.add("active")}(e)}))}))})(),function(){const e=document.getElementById("hamburger"),t=document.querySelector(".header__image"),n=document.getElementById("imgUpload");!function(e){e.children[0].src=D}(t),e.addEventListener("click",j),n.addEventListener("change",A),t.addEventListener("click",w)}(),function(){const n=document.getElementById("add"),o=document.getElementById("create");n.addEventListener("click",(function(){document.querySelector(".form__heading").textContent="Add Task",t()}));const i=document.getElementById("close");document.getElementById("cancel").addEventListener("click",t),i.addEventListener("click",t),o.addEventListener("click",(n=>{!function(n){n.preventDefault();const o=document.getElementById("title").value,i=document.getElementById("description").value,d=document.getElementById("date").value,r=(document.getElementById("priority").value,document.getElementById("project").value,document.querySelector(".title__error")),c=document.querySelector(".message__error"),a=document.querySelector(".date__error");""===o.trim()&&(r.textContent="Title must not be blank",setTimeout((function(){r.textContent=" "}),2e3)),""===i.trim()&&(c.textContent="Message must not be blank",setTimeout((function(){c.textContent=" "}),2e3)),""===d&&(a.textContent="Please select a date",setTimeout((function(){a.textContent=" "}),2e3)),d<e()?(a.textContent="Date must not be in the past",setTimeout((function(){a.textContent=" "}),3e3)):function(n){n.preventDefault();const o=document.getElementById("title").value,i=document.getElementById("description").value,d=document.getElementById("date").value,r=document.getElementById("priority").value,c=document.getElementById("project").value,a=Math.random(),s=new C(o,i,d,r,c,a);f.push(s),d===e()&&(_.push(s),E("add")),t()}(n)}(n)}))}()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,